server:
  port: 9067

spring:
  main:
    #????bean???
    allow-bean-definition-overriding: true
  shardingsphere:
    sharding:
      tables:
        user:
          actual-data-nodes: m$->{1..2}.user_$->{1..2}
          #??????sex??????????sex % 2 + 1?sex?????m1????????m2?
          database-strategy:
            inline:
              sharding-column: sex
              algorithm-expression: m$->{sex % 2 + 1}
          #??user?????????SNOWFLAKE
          key-generator:
            column: user_id
            type: SNOWFLAKE
          #??user?????????????????????
          table-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: user_$->{user_id % 2 + 1}

    datasource:
      names: m1,m2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sharding-jdbc-test1?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sharding-jdbc-test2?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
        username: root
        password: root
    props:
      sql:
        show: true
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  type-aliases-package: com.doubledimple.shardingtest.mapper
  mapper-locations: classpath:mapper/*.xml



